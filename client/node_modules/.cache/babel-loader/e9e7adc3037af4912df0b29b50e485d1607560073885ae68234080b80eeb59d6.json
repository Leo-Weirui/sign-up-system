{"ast":null,"code":"var _jsxFileName = \"/Users/yanglongchun/Sign-up system project/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token) {\n      loadUser();\n    } else {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE\n      });\n    }\n  }, []);\n\n  // Load user function\n  const loadUser = async () => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_START\n      });\n      const response = await axios.get('/api/auth/me');\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: response.data.user\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load user'\n      });\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_START\n      });\n      const response = await axios.post('/api/auth/register', userData);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await axios.get('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update user function\n  const updateUser = async userData => {\n    try {\n      const response = await axios.put('/api/auth/profile', userData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    changePassword,\n    clearError,\n    loadUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER","CLEAR_ERROR","authReducer","state","action","type","setItem","payload","removeItem","AuthProvider","children","_s","dispatch","defaults","headers","common","loadUser","response","get","data","_error$response","_error$response$data","message","login","email","password","post","success","_error$response2","_error$response2$data","register","userData","_error$response3","_error$response3$data","logout","console","updateUser","put","_error$response4","_error$response4$data","changePassword","currentPassword","newPassword","_error$response5","_error$response5$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/yanglongchun/Sign-up system project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    \n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload }\n      };\n    \n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    \n    default:\n      return state;\n  }\n};\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token) {\n      loadUser();\n    } else {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE });\n    }\n  }, []);\n\n  // Load user function\n  const loadUser = async () => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n      \n      const response = await axios.get('/api/auth/me');\n      \n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: response.data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: error.response?.data?.message || 'Failed to load user'\n      });\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      \n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      \n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: message\n      });\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.REGISTER_START });\n      \n      const response = await axios.post('/api/auth/register', userData);\n      \n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: message\n      });\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await axios.get('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update user function\n  const updateUser = async (userData) => {\n    try {\n      const response = await axios.put('/api/auth/profile', userData);\n      \n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data.user\n      });\n      \n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/password', {\n        currentPassword,\n        newPassword\n      });\n      \n      toast.success('Password changed successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Password change failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    changePassword,\n    clearError,\n    loadUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}